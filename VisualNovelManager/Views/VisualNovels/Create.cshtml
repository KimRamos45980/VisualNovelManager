@model VisualNovelManager.Models.VisualNovel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>VisualNovel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <p>Add a game yourself!</p>
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="GameTitle" class="control-label"></label>
                <input asp-for="GameTitle" class="form-control" />
                <span asp-validation-for="GameTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GameAlias" class="control-label"></label>
                <input asp-for="GameAlias" class="form-control" />
                <span asp-validation-for="GameAlias" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CompletionStatus" class="control-label"></label>
                <select asp-for="CompletionStatus" asp-items="@(new SelectList(ViewBag.status, "Value", "Text"))"></select>
                <span asp-validation-for="CompletionStatus" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div id="vndb_search" class="col-md-4">
        <p>Search for a game through the <br> Visual Novel Database!</p>
        <div>
            <label>Please enter the title of a Visual Novel</label>
            <input type="search"/>
            <button type="button">Search</button>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
